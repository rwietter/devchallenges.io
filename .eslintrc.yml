env:
  browser: true
  es2021: true
extends:
  - 'plugin:react/recommended'
  - 'airbnb'
  - 'airbnb/hooks'
  - 'prettier'
  - 'eslint:recommended'
  - 'plugin:import/errors'
  - 'plugin:import/warnings'
  - 'plugin:react-hooks/recommended'
parser: "@typescript-eslint/parser"
parserOptions:
  ecmaFeatures:
    jsx: true
    modules: true
    sourceType: "module"
  ecmaVersion: 12
  sourceType: module
plugins:
  - 'react'
  - 'react-hooks'
  - 'import'
  - 'eslint-plugin-import-helpers'
  - '@typescript-eslint'
rules: {
  radix: 'error',
  no-self-compare: "error",
  react/prop-types: 'off',
  react/jsx-uses-react: "off",
  react/react-in-jsx-scope: "off",
  implicit-arrow-linebreak: ['error', 'beside'],
  no-compare-neg-zero: 'error',
  import/prefer-default-export: 'off',
  no-dupe-else-if: 'error',
  react/forbid-prop-types: 'off',
  react/jsx-props-no-spreading: 'off',
  no-irregular-whitespace: ['error', { skipTemplates: true }],
  array-callback-return: 'error',
  operator-linebreak: [2, 'before', { overrides: { '?': 'after' } }],
  block-scoped-var: 'error',
  eqeqeq: ['error', 'always'],
  max-len: [ 'error', { code: 90, tabWidth: 2 } ],
  object-curly-newline: [ 'error', { consistent: true } ],
  newline-per-chained-call: [ 'error', { ignoreChainWithDepth: 2 } ],
  complexity: [ 'warn', { max: 3 } ],
  treatUndefinedAsUnspecified: 'off',
  class-methods-use-this: 'off',
  react/jsx-curly-newline: 'off',
  react/jsx-filename-extension: [ 1, { extensions: ['.jsx', '.tsx', '.js', '.ts'] } ],
  no-param-reassing: 'off',
  no-underscore-dangle: 'off',
  react-hooks/rules-of-hooks: 'error',
  react-hooks/exhaustive-deps: 'warn',
  react/jsx-indent: [ 2, 2, { indentLogicalExpressions: true } ],
  import/no-extraneous-dependencies: [ 'off', { devDependencies: true } ],
  import/extensions: [ 'error', 'ignorePackages', { ts: 'never', tsx: 'never' } ],
  lines-around-comment: [
    "error",
    {
      "beforeBlockComment": false,
      "afterBlockComment": false,
      "beforeLineComment": false,
      "afterLineComment": false,
      "allowBlockStart": false,
      "allowBlockEnd": false,
      "allowObjectStart": false,
      "allowObjectEnd": true,
      "allowArrayStart": true,
      "allowArrayEnd": true
    }
  ],
  no-confusing-arrow: ["error", { "allowParens": false }],
  eslint-import-resolver-node: 'off',
  no-mixed-operators: "error",
  no-unexpected-multiline: "error",
  quotes: ["error", "backtick"],
  import/no-unresolved: "off",
  import/named: 1,
  import/namespace: 1,
  import/default: 1,
  import/export: 1,
  import/no-useless-path-segments: 1,
  semi: "error",
  import-helpers/order-imports: [
    'warn',
    {
      newlinesBetween: 'always',
      groups: [
          'module',
          '/^react/',
          /^
          (assert
          |async_hooks
          |buffer
          |child_process
          |cluster
          |console
          |constants
          |crypto
          |dgram
          |dns
          |domain
          |events
          |fs
          |http
          |http2
          |https
          |inspector
          |module
          |net
          |os
          |path
          |perf_hooks
          |process
          |punycode
          |querystring
          |readline
          |repl
          |stream
          |string_decoder
          |timers
          |tls
          |trace_events
          |tty
          |url
          |util
          |v8
          |vm
          |zli
          )/,
        ],
      alphabetize: { order: 'asc', ignoreCase: true },
    },
  ],
  jsx-a11y/rule-name: "off"
}
settings:
  react:
    version: 'detect'
  import/extensions: ['.js', '.ts', '.jsx', '.tsx']
  import/resolver: {
    node: {
      extensions: [
        ".js",
        ".jsx"
      ]
    }
  }
